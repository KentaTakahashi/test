回答
本文のコードだと不正に少ない計算量となるアルゴリズムの実装が可能となる。
具体的には同ディレクトリ添付のCheatingSortDoubleのような実装をすると、
ソートアルゴリズムで一番重い"compare"の回数が0回であるかのように振舞える。
これは、"probe"関数が外部に提供されていることに起因している。
つまり、"probe"関数によりCheatingSortDoubleクラス内にソート対象の配列が複製でき、
そこで"compare"をカウントアップなしで実行できる。
ソートした複製配列を参考にオリジナルをswapすれば、不正に少ないMetricsが記録されることとなる。

修正点
"probe"関数を削除する
そもそもソートアルゴリズムでは相対比較"compare"さえあれば十分。
絶対量は隠蔽したほうがよいはず。